#_preseed_V1

d-i debconf/priority select critical
d-i auto-install/enable boolean true

d-i console-setup/ask_detect boolean false
d-i debconf/frontend select noninteractive

# ============= Date/local ===========
d-i debian-installer/locale string en_US
d-i keyboard-configuration/xkb-keymap select us

d-i time/zone string UTC
d-i clock-setup/utc boolean true
d-i clock-setup/utc-auto boolean true

# ============== Accounts ==============
# account settings
d-i passwd/root-login boolean false
d-i passwd/user-fullname string {{ hostvars[item]['ansible_user'] }}
d-i passwd/username string {{ hostvars[item]['ansible_user'] }}
d-i passwd/user-password-crypted password {{ user_password_hash }}

# =============== Network ==============

d-i netcfg/disable_autoconfig boolean true
d-i netcfg/choose_interface select enp0s0
d-i netcfg/get_nameservers string 1.1.1.1
d-i netcfg/get_ipaddress string {{ hostvars[item]['ansible_host'] }}
d-i netcfg/get_netmask string {{ ansible_default_ipv4.netmask }}
d-i netcfg/get_gateway string {{ ansible_default_ipv4.gateway }}
d-i netcfg/confirm_static boolean true

d-i netcfg/get_hostname string {{ item }}

# ============== Bootloader ============

d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true

d-i grub-installer/bootdev string /dev/sda

# ============== Disk ==================

# set as uefi only
d-i partman-efi/non_efi_system boolean true

# confirm removing old lvms
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true # remove old raid

# LVM config
d-i partman-auto/method string lvm
d-i partman-auto-lvm/guided_size string max

d-i partman/confirm boolean true
d-i partman-lvm/confirm boolean true
d-i partman/confirm_write_new_label boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

d-i partman-auto/choose_recipe select atomic # all in one part

d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true


# ============= Packages ===============
d-i apt-setup/non-free boolean true
d-i apt-setup/contrib boolean true


########## adding local repos ############

#d-i debian-installer/allow_unauthenticated boolean true

d-i apt-setup/local0/repository string \
       http://{{ hostvars['pi0']['ansible_host'] }}:3142/debian bookworm main
d-i apt-setup/local0/source boolean true
d-i apt-setup/local0/comment string Repository

d-i apt-setup/local1/repository string \
       http://{{ hostvars['pi0']['ansible_host'] }}:3142/security bookworm main
d-i apt-setup/local1/source boolean true
d-i apt-setup/local1/comment string Repository

######### setup default packages to install ########

tasksel tasksel/first multiselect standard, ssh-server

# ============= Misc ===================
popularity-contest popularity-contest/participate boolean false

# Avoid that last message about the install being complete.
d-i finish-install/reboot_in_progress note
d-i finish-install/keep-consoles boolean true

# Configure sudo for automation and set up SSH key for {{ hostvars[item]['ansible_user'] }} user, also setup hostname
d-i preseed/late_command string \
    in-target sed -i -E -e 's/%sudo[[:space:]]+ALL=\(ALL:ALL\)[[:space:]]+ALL/%sudo ALL=(ALL:ALL) NOPASSWD:ALL/' /etc/sudoers; \
    in-target mkdir -p /home/{{ hostvars[item]['ansible_user'] }}/.ssh; \
    in-target /bin/sh -c "echo '{{ ssh_public_key }}' >> /home/{{ hostvars[item]['ansible_user'] }}/.ssh/authorized_keys"; \
    in-target chown -R {{ hostvars[item]['ansible_user'] }}:{{ hostvars[item]['ansible_user'] }} /home/{{ hostvars[item]['ansible_user'] }}/.ssh/; \
    in-target chmod 644 /home/{{ hostvars[item]['ansible_user'] }}/.ssh/authorized_keys; \
    in-target chmod 700 /home/{{ hostvars[item]['ansible_user'] }}/.ssh/; \
    in-target /bin/bash -c 'echo "{{ item }}" > /etc/hostname'