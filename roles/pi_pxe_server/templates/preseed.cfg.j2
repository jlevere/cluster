#_preseed_V1

d-i debconf/priority select critical
d-i auto-install/enable boolean true

d-i console-setup/ask_detect boolean false
d-i debconf/frontend select noninteractive

# ============= Date/local ===========
d-i debian-installer/locale string en_US
d-i keyboard-configuration/xkb-keymap select us

d-i time/zone string UTC
d-i clock-setup/utc boolean true
d-i clock-setup/utc-auto boolean true

# ============== Accounts ==============
# account settings
d-i passwd/root-login boolean false
d-i passwd/user-fullname string {{ hostvars[item]['ansible_user'] }}
d-i passwd/username string {{ hostvars[item]['ansible_user'] }}
d-i passwd/user-password-crypted password {{ user_password_hash }}

# =============== Network ==============

d-i netcfg/disable_autoconfig boolean true
# Auto-select the active NIC (robust across naming schemes)
d-i netcfg/choose_interface select auto
d-i netcfg/use_dhcp boolean false
d-i netcfg/dhcp_failed note
d-i netcfg/get_nameservers string {{ (hostvars[item]['nameservers'] | default(pi_pxe_server_nameservers, true)) | join(' ') }}
d-i netcfg/get_ipaddress string {{ hostvars[item]['ansible_host'] }}
d-i netcfg/get_netmask string {{ hostvars[item]['netmask'] | default(ansible_default_ipv4.netmask) }}
d-i netcfg/get_gateway string {{ hostvars[item]['gateway'] | default(ansible_default_ipv4.gateway) }}
d-i netcfg/confirm_static boolean true

d-i netcfg/get_hostname string {{ item }}
d-i netcfg/get_domain string local

# When using network preseeding (preseed/url), the installer initially uses DHCP to fetch this file.
# Re-run netcfg so the static settings above take effect and are written to the target.
# Ref: Debian Installer manual (network-preseeding workaround)
d-i preseed/early_command string kill-all-dhcp; netcfg

# ============== Bootloader ============

d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true


# ============== Disk ==================

# confirm removing old lvms
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true # remove old raid

# LVM config
d-i partman-auto/method string lvm
d-i partman-auto-lvm/guided_size string max

# all in one partition layout
d-i partman-auto/choose_recipe select atomic

# confirmations
d-i partman/confirm boolean true
d-i partman/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm_nooverwrite boolean true
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true


# ============= Packages ===============
d-i apt-setup/non-free boolean true
d-i apt-setup/non-free-firmware boolean true
d-i apt-setup/contrib boolean true

# Use local apt cache (aptutil) as the mirror directly
d-i mirror/protocol string http
d-i mirror/country string manual
d-i mirror/http/hostname string {{ pi_pxe_next_server_ip | default(ansible_default_ipv4.address) }}:3142
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

# Ensure security repository also uses the local cache
d-i apt-setup/security_host string {{ pi_pxe_next_server_ip | default(ansible_default_ipv4.address) }}:3142
d-i apt-setup/security_path string /debian-security
d-i apt-setup/security_proxy string

######### setup default packages to install ########

tasksel tasksel/first multiselect standard
d-i pkgsel/run_tasksel boolean false
# Ensure OpenSSH server is installed so SSH is available post-install
d-i pkgsel/include string openssh-server

# ============= Misc ===================
popularity-contest popularity-contest/participate boolean false

# Avoid that last message about the install being complete.
d-i finish-install/reboot_in_progress note
d-i finish-install/keep-consoles boolean true

# Configure sudo for automation and set up SSH key for {{ hostvars[item]['ansible_user'] }} user, also setup hostname
d-i preseed/late_command string \
    in-target sed -i -E -e 's/%sudo[[:space:]]+ALL=\(ALL:ALL\)[[:space:]]+ALL/%sudo ALL=(ALL:ALL) NOPASSWD:ALL/' /etc/sudoers; \
    in-target /usr/sbin/usermod -aG sudo {{ hostvars[item]['ansible_user'] }}; \
    in-target /bin/systemctl enable ssh; \
    in-target mkdir -p /home/{{ hostvars[item]['ansible_user'] }}/.ssh; \
    in-target /bin/sh -c "echo '{{ ssh_public_key }}' >> /home/{{ hostvars[item]['ansible_user'] }}/.ssh/authorized_keys"; \
    in-target chown -R {{ hostvars[item]['ansible_user'] }}:{{ hostvars[item]['ansible_user'] }} /home/{{ hostvars[item]['ansible_user'] }}/.ssh/; \
    in-target chmod 644 /home/{{ hostvars[item]['ansible_user'] }}/.ssh/authorized_keys; \
    in-target chmod 700 /home/{{ hostvars[item]['ansible_user'] }}/.ssh/; \
    in-target /bin/bash -c 'echo "{{ item }}" > /etc/hostname'